% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_customer_name.R
\name{replace_customer_name}
\alias{replace_customer_name}
\alias{get_replacements}
\title{Replace customer names}
\usage{
replace_customer_name(
  x,
  from_to = NULL,
  ownership = NULL,
  remove_ownership = FALSE
)

get_replacements()
}
\arguments{
\item{x}{Character string, (likely) containing customer names.}

\item{from_to}{A dataframe with replacement rules to be applied, contains
columns \code{from} (for initial values) and \code{to} (for resulting values).}

\item{ownership}{vector of company ownership types to be distinguished for
cut-off or separation.}

\item{remove_ownership}{Flag that defines whether ownership type (like llc)
should be cut-off.}
}
\value{
\itemize{
\item \code{replace_customer_name()} returns a character string.
\item \code{get_replacements()} returns a \link[dplyr:tibble]{dplyr::tibble} with columns \code{from} and
\code{to}.
}
}
\description{
\itemize{
\item \code{replace_customer_name()} takes any character vector, usually a vector of
customer names, and replaces (a) to lower case; (b) to latin-ascii
characters; and (c) to standard abbreviations of ownership types.
\item \code{get_replacements()} allows you to access the default replacements table,
so you can amend it and pass it to \code{replace_customer_name()} via the
\code{from_to} argument.
}
}
\examples{
library(dplyr)

replace_customer_name("A. and B")
replace_customer_name("Acuity Brands Inc")
replace_customer_name(c("3M Company", "Abbott Laboratories", "AbbVie Inc."))

custom_replacement <- tibble(from = "AAAA", to = "B")
replace_customer_name("Aa Aaaa", from_to = custom_replacement)

neutral_replacement <- tibble(from = character(0), to = character(0))
replace_customer_name("Company Name Owner", from_to = neutral_replacement)
replace_customer_name(
  "Company Name Owner",
  from_to = neutral_replacement,
  ownership = "owner",
  remove_ownership = TRUE
)

get_replacements()

append_replacements <- get_replacements() \%>\%
  add_row(
    .before = 1,
    from = c("AA", "BB"), to = c("alpha", "beta")
  )
append_replacements

# And in combination with `replace_customer_name()`
replace_customer_name(c("AA", "BB", "1"), from_to = append_replacements)
}
\seealso{
Other internal-ish: 
\code{\link{bridge_sector}()},
\code{\link{score_similarity}()},
\code{\link{uniquify_id_column}()}
}
\author{
person(given = "Evgeny",
family = "Petrovsky",
role = c("aut", "ctr"))
}
\concept{internal-ish}
