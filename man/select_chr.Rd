% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_chr.R
\name{select_chr}
\alias{select_chr}
\title{Select elements from a vector using tidyselect helpers}
\usage{
select_chr(x, ...)
}
\arguments{
\item{x}{A character vector.}

\item{...}{
  Arguments passed on to \code{\link[tidyselect:starts_with]{tidyselect::starts_with}}
  \describe{
    \item{\code{match}}{A string.}
    \item{\code{ignore.case}}{If \code{TRUE}, the default, ignores case when matching
names.}
    \item{\code{vars}}{A character vector of variable names. When called
from inside selecting functions like \code{\link[dplyr:select]{dplyr::select()}} these are
automatically set to the names of the table.}
  }}
}
\value{
A character vector
}
\description{
This function allows you to select elements of a character vector like
\code{\link[dplyr:select]{dplyr::select()}} allows you to select columns of a dataframe -- via
tidyselect helpers.
}
\examples{
# Access tidyselect helpers via dplyr or directly with `library(tidyselect)`
library(dplyr)

x <- paste0("number_", 1:15)
x

# You can select elements from a caracter vector in many ways. All the
# tidyselect (available via dplyr) helpers that work with dplyr::selec() work here too.
select_chr(
  x,
  matches("_3"),
  contains("_2"),
  ends_with("_1"),
  number_4:number_6,
  -number_7,
  -8,
  11:9,
  "number_15"
)
}
\seealso{
Other internal-ish: 
\code{\link{bridge_sector}()},
\code{\link{match_all_against_all}()},
\code{\link{prioritize_at}()},
\code{\link{prioritize_level}()},
\code{\link{restructure_ald_for_matching}()},
\code{\link{restructure_loanbook_for_matching}()},
\code{\link{score_similarity}()},
\code{\link{to_alias}()},
\code{\link{uniquify_id_column}()}
}
\concept{internal-ish}
