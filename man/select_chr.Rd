% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_chr.R
\name{select_chr}
\alias{select_chr}
\title{Select elements from a vector using tidyselect helpers}
\usage{
select_chr(x, ...)
}
\arguments{
\item{x}{A character vector.}

\item{...}{
  Arguments passed on to \code{\link[tidyselect:starts_with]{tidyselect::starts_with}}
  \describe{
    \item{\code{match}}{A string.}
    \item{\code{ignore.case}}{If \code{TRUE}, the default, ignores case when matching
names.}
    \item{\code{vars}}{A character vector of variable names. When called
from inside selecting functions like \code{\link[dplyr:select]{dplyr::select()}} these are
automatically set to the names of the table.}
  }}
}
\value{
A character vector
}
\description{
This function allows you to used tidyselect helpers to do with a character
vector what \code{\link[dplyr:select]{dplyr::select()}} allows you to do with the names of a dataframe.
}
\examples{
library(dplyr)

# With dplyr::select() you can do something like this to a dataframe
mtcars \%>\%
  select(starts_with("cy"), matches("arb"), everything())

# With select_chr() you can do the same to a character vector
a_character_vector <- mtcars \%>\%
  names()

a_character_vector \%>\%
  select_chr(starts_with("cy"), matches("arb"), everything())

# Like select(), you may use "quoted" strings, bare strings, and positions
a_character_vector \%>\%
  select_chr("drat", cyl, 4:6)
}
